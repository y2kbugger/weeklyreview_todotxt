[tool.poetry]
name = "insync"
version = "0.1.0"
description = "Todo, Checklist, Reference with Guided GTD Review"
authors = ["y2k <git@y2kbugger.com>"]
license = "GPL3"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.13.0"
fastapi = {extras = ["all"], version = "^0.115.11"}
jinja2 = "^3.1.5"
websockets = "^15.0"
uuid6 = "^2024.7.10"
python-multipart = "^0.0.20"
uvicorn = {extras = ["standard"], version = "^0.34.0"}
uvloop = "^0.21.0"
micro-namedtuple-sqlite-persister = {git = "https://github.com/y2kbugger/tuplesaver.git"}
jinja2-fragments = "^1.8.0"

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.5"
pytest = "^8.3.5"
pandas = "^2.2.3"
ruff = "^0.9.9"
pre-commit = "^4.1.0"
arel = { git = "https://github.com/y2kbugger/arel.git", branch = "asset_reload" }
ipywidgets = "^8.1.5"
line-profiler = "^4.2.0"
sqlparse = "^0.5.3"
tabulate = "^0.9.0"

[tool.poetry.group.prod]
optional = true

[tool.poetry.group.prod.dependencies]
gunicorn = "^21.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "8.0"
python_files = "*_test.py"
addopts = [
    ]
testpaths = ["insync"]

[tool.ruff]

# Exclude a variety of commonly ignored directories.
extend-exclude = [
    ".ipynb_checkpoints",
    ".pytest_cache",
    ".ruff_cache",
    "*.ipynb",
]

line-length = 190
indent-width = 4

[tool.ruff.lint]
select = ["FIX", "TD", "F", "A", "COM", "B", "C4", "E", "U", "ERA", "W1", "W2", "I", "ANN001", "ANN201", "RUF100", "ICN", "SLF", "SIM","PTH","PD","RUF"]
ignore = ["TD001", "TD002", "TD003", "SIM105", "PD901", "PD010", "PD002", "PD008", "FIX002", "COM812", "SIM102", "SIM108", "C408", "C416", "E731", "SIM103"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
docstring-code-format = true
docstring-code-line-length = "dynamic"

quote-style = "preserve"

[tool.pyright]
venvPath = "."
venv = ".venv"
typeCheckingMode = "standard"
